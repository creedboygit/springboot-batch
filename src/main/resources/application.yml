spring:
  datasource: # docker-compose에 정의했던 DB 접속 정보
#    url: jdbc:h2:mem:mydb
    url: jdbc:mysql://127.0.0.1:3306/pass_local?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: pass_local_user
    password: passlocal123
#    driver-class-name: org.h2.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20 # pool에 보관 가능한 최대 connection 수
  batch:
    job:
      enabled: false # 기본값 true는 Spring Boot 실행 시 등록되어 있는 Job들이 실행됩니다.
    jdbc:
      # Batch에 사용되는 SQL 초기화 스크립트를 실행합니다. 임베디드인 경우에는 기본적으로 실행하는데, always 설정을 하면 임베디드 타입처럼 항상 활성화시킬 수 있습니다.
      # 초기 수행한 이후에는 꺼두어도 됩니다.
      initialize-schema: always
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  thymeleaf:
    cache: false

logging:
  level:
    p6spy: debug

decorator:
  datasource:
    p6spy:
      enable-logging: true
      multiline: false
      logging: slf4j

kakaotalk:
  host: https://kapi.kakao.com
  token: YOUR_ACCESS_TOKEN

